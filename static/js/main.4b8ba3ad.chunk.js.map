{"version":3,"sources":["images/cloudyday.svg","images/cloudynight.svg","images/fog.svg","images/rain.svg","images/snow.svg","images/sunrise.svg","images/sunset.svg","images/clearday.svg","images/clearnight.svg","images/wind.svg","images/sleet.svg","images/cloudy.svg","matchicon.jsx","components/Smartcard.jsx","components/Forecast.jsx","components/DetailedDay.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","matchicon","props","matchedIcon","icon","clearday","clearnight","cloudyday","cloudynight","cloudy","rain","sleet","snow","wind","fog","sunrise","sunset","react_default","a","createElement","alt","src","height","width","smartcard","gotomain","goback","_this","weatherInfo","this","undefined","className","onClick","src_matchicon","toString","Component","Forecast","uppercaseFirst","string","charAt","toUpperCase","slice","forecast","unit","location","split","map","item","weather","day","summary","temperatureMax","temperatureMin","windSpeed","humidity","DetailedDay","state","data","hourlyDetails","forEach","e","push","name","time","uv","temperature","pv","apparentTemperature","amt","renderLineChart","es6","margin","top","right","bottom","left","type","dataKey","stroke","strokeDasharray","App","searchValue","loading","typeOFContent","handleSearchQuery","event","setState","target","value","handleKeyPress","key","fetchCity","switchUnit","checkGeolocation","navigator","geolocation","getCurrentPosition","displayLocationInfo","console","log","position","lng","coords","longitude","lat","latitude","concat","length","fetch","headers","content-type","then","json","result","Humidity","Temperature","fetchForecast","tempArray","weekArray","getWeekFromNow","dayNr","apparentTemperatureMin","apparentTemperatureMax","fetchOneDetailedDay","date","Date","counter","getDay","weekday","i","j","getRandomIcon","weatherDiv","icons","randomIcon","Math","floor","random","gobackToMainMenu","loader","onChange","onKeyPress","placeholder","Smartcard_smartcard","Forecast_Forecast","DetailedDay_DetailedDay","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4b8ba3ad.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cloudyday.3237f7da.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudynight.7c36f2b5.svg\";","module.exports = __webpack_public_path__ + \"static/media/fog.c356784f.svg\";","module.exports = __webpack_public_path__ + \"static/media/rain.e13be320.svg\";","module.exports = __webpack_public_path__ + \"static/media/snow.1a2bbf7d.svg\";","module.exports = __webpack_public_path__ + \"static/media/sunrise.c02360f8.svg\";","module.exports = __webpack_public_path__ + \"static/media/sunset.7da71f4c.svg\";","module.exports = __webpack_public_path__ + \"static/media/clearday.4b9869a6.svg\";","module.exports = __webpack_public_path__ + \"static/media/clearnight.f86c33c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/wind.8f977e0c.svg\";","module.exports = __webpack_public_path__ + \"static/media/sleet.f45eece5.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy.82408b66.svg\";","import React from 'react';\r\nimport cloudyday from './images/cloudyday.svg';\r\nimport cloudynight from './images/cloudynight.svg';\r\nimport fog from './images/fog.svg';\r\nimport rain from './images/rain.svg';\r\nimport snow from './images/snow.svg';\r\nimport sunrise from './images/sunrise.svg';\r\nimport sunset from './images/sunset.svg';\r\nimport clearday from './images/clearday.svg';\r\nimport clearnight from './images/clearnight.svg';\r\nimport wind from './images/wind.svg';\r\nimport sleet from './images/sleet.svg';\r\nimport cloudy from './images/cloudy.svg';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst matchicon = (props) => {\r\n  let matchedIcon = null;\r\n  switch (props.icon) {\r\n    case \"clear-day\": matchedIcon = clearday;\r\n      break;\r\n    case \"clear-night\": matchedIcon = clearnight;\r\n      break;\r\n    case \"partly-cloudy-day\": matchedIcon = cloudyday;\r\n      break;\r\n    case \"partly-cloudy-night\": matchedIcon = cloudynight;\r\n      break;\r\n    case \"cloudy\": matchedIcon = cloudy;\r\n      break;\r\n    case \"rain\": matchedIcon = rain;\r\n      break;\r\n    case \"sleet\": matchedIcon = sleet;\r\n      break;\r\n    case \"snow\": matchedIcon = snow;\r\n      break;\r\n    case \"wind\": matchedIcon = wind;\r\n      break;\r\n    case \"fog\": matchedIcon = fog;\r\n      break;\r\n    case \"sunrise\": matchedIcon = sunrise;\r\n      break;\r\n    case \"sunset\": matchedIcon = sunset;\r\n      break;\r\n    default: return null;\r\n  }\r\n\r\n  return <img alt=\"weathericon\" src={matchedIcon} height=\"50vh\" width=\"50vw\" />\r\n}\r\n\r\nexport default matchicon;\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport '../styles/smartcard.css'\r\nimport Matchicon from '../matchicon';\r\n\r\n\r\nexport default class smartcard extends Component {\r\n  gotomain = () => {\r\n    const { goback } = this.props;\r\n    goback();\r\n  }\r\n\r\n  render() {\r\n    const { weatherInfo } = this.props;\r\n    if (weatherInfo[0] != undefined) {\r\n      return (\r\n        <div className=\"WholeBody\">\r\n          <div className=\"topnav\"> <button className=\"backButton\" onClick={this.gotomain}>Back</button></div>\r\n          <div className=\"FlexMiddle\">\r\n            <div className=\"weatherCardBorder\">\r\n              <div className=\"weatherInfoP alignCenter headerOfCard\">Weather in  <b className=\"flexRight alignCenter pl-1\">{weatherInfo[6]}<div className=\"iconContainer\"><Matchicon icon={weatherInfo[7].toString()} /></div></b></div>\r\n              <div className=\"weatherInfoP\">Summary:  <b className=\"pl-1\">{weatherInfo[2]}</b></div><br></br>\r\n              <div className=\"weatherInfoP\">Temperature:  <b className=\"pl-1\"> {weatherInfo[1]}° {weatherInfo[8]}</b></div><br></br>\r\n              <div className=\"weatherInfoP\">Windspeed:  <b className=\"pl-1\"> {weatherInfo[5]}</b></div> <br></br>\r\n              <div className=\"weatherInfoP\">Humidity:   <b className=\"pl-1\"> {weatherInfo[0]}</b></div><br></br>\r\n              <br></br>\r\n              <br></br>\r\n              <div className=\"weatherInfoP alignCenter\">Sunrise: <b className=\"flexRight alignCenter pl-1\"> {weatherInfo[3]}<div className=\"iconContainer\"><Matchicon icon=\"sunrise\" /></div></b></div>\r\n              <div className=\"weatherInfoP alignCenter\">Sunset: <b className=\"flexRight alignCenter pl-1\"> {weatherInfo[4]} <Matchicon icon=\"sunset\" /></b></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    } else {\r\n      return null;\r\n    }\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport '../styles/smartcard.css';\r\nimport '../styles/forecast.css';\r\nimport '../styles/App.css';\r\nimport Matchicon from '../matchicon'\r\n\r\n\r\nexport default class Forecast extends Component {\r\n  gotomain = () => {\r\n    const { goback } = this.props;\r\n    goback();\r\n  }\r\n\r\n  uppercaseFirst = (string) =>\r\n    {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n\r\n  render() {\r\n    const { forecast } = this.props;\r\n    const { unit } = this.props;\r\n    let { location } = this.props;\r\n    if(location.split(',')[1] !== undefined) location = 'your location';\r\n    \r\n\r\n    return (\r\n      <div className=\"forecastContainer\">\r\n        <div className=\"topnav\"> <button className=\"backButton\" onClick={this.gotomain}>Back</button></div>\r\n        <div className=\"midflex alignCenter\"><div className=\"betterCloud\"><h3><b className=\"absoluteB\">{this.uppercaseFirst(location)}</b></h3></div></div>\r\n        <div className=\"midflex\">\r\n          {forecast.map(item => {\r\n            return <div className=\"weatherCard\">\r\n              <div className=\"weatherInfoP alignCenter headerOfCard\">{item.weather.day} <b className=\"flexRight alignCenter pl-1\"><div className=\"iconContainer\"><Matchicon icon={item.weather.icon} /></div></b></div>\r\n              <div className=\"weatherInfoP\">Summary:  <b className=\"pl-1 overauto\">{item.weather.summary}</b></div><br></br>\r\n              <div className=\"weatherInfoP\">Max:  <b className=\"pl-1\"> {item.weather.temperatureMax}° {unit}</b></div><br></br>\r\n              <div className=\"weatherInfoP\">Min:  <b className=\"pl-1\"> {item.weather.temperatureMin}° {unit}</b></div><br></br>\r\n              <div className=\"weatherInfoP\">Windspeed:  <b className=\"pl-1\"> {item.weather.windSpeed}</b></div> <br></br>\r\n              <div className=\"weatherInfoP\">Humidity:   <b className=\"pl-1\"> {item.weather.humidity}</b></div><br></br>\r\n              <br></br>\r\n              <br></br>\r\n              <div className=\"weatherInfoP alignCenter\">Sunrise: <b className=\"flexRight alignCenter pl-1\"> {item.weather.sunrise}<div className=\"iconContainer\"><Matchicon icon=\"sunrise\" /></div></b></div>\r\n              <div className=\"weatherInfoP alignCenter\">Sunset: <b className=\"flexRight alignCenter pl-1\"> {item.weather.sunset} <Matchicon icon=\"sunset\" /></b></div>\r\n            </div>\r\n          })}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, ResponsiveContainer } from 'recharts';\r\nimport '../styles/smartcard.css';\r\nimport '../styles/DetailedDay.css';\r\n\r\nexport default class DetailedDay extends Component {\r\n  state = {\r\n\r\n  }\r\n\r\n  gotomain = () => {\r\n    const { goback } = this.props;\r\n    goback();\r\n  }\r\n\r\n  componentWillMount() {\r\n\r\n  }\r\n\r\n  render() {\r\n    const data = [];\r\n    const { hourlyDetails } = this.props;\r\n    const { unit } = this.props;\r\n    hourlyDetails.forEach(e => {\r\n      data.push({ name: e.time, uv: e.temperature, pv: e.apparentTemperature, amt: 2400 })\r\n    });\r\n    const renderLineChart = (\r\n      <ResponsiveContainer>\r\n        <LineChart width={500} height={250} data={data} margin={{ top: 5, right: 20, bottom: 5, left: 0 }}>\r\n          <Line type=\"monotone\" dataKey=\"uv\" stroke=\"darkslateblue\" />\r\n          <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" />\r\n          <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n    return (\r\n      <div>\r\n        <div className=\"topnav\"> <button className=\"backButton\" onClick={this.gotomain}>Back</button></div>\r\n        <h1 className=\"flexbox\">Data for {this.props.location}</h1>\r\n        <div className=\"flexbox bigheight\">\r\n       \r\n          <div className=\"flexColumn\">\r\n            <p className=\"temperature\">Temperature °{unit}</p>\r\n            <p className=\"apparentTemperature\">Apparent Temperature °{unit}</p>\r\n          </div>\r\n          <div className=\"boxForChart\">\r\n            {renderLineChart}\r\n          </div>\r\n          <div className=\"smallcardContainer\">\r\n            {hourlyDetails.map(e => {\r\n              return (\r\n                <div className=\"smallcard\">\r\n                  <p> {e.time}</p>\r\n                  <p>{e.temperature}°{unit}</p>\r\n                </div>\r\n              )\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './styles/App.css';\r\nimport Smartcard from './components/Smartcard';\r\nimport Forecast from './components/Forecast';\r\nimport DetailedDay from './components/DetailedDay.jsx';\r\nimport Matchicon from './matchicon';\r\n\r\n\r\nclass App extends Component {\r\n  state = {\r\n    icon: 'cloud',\r\n    searchValue: '',\r\n    weatherInfo: [],\r\n    loading: false,\r\n    unit: 'C',\r\n    location: null,\r\n    typeOFContent: 'start',\r\n    forecast: [],\r\n    hourlyDetails: [],\r\n  }\r\n\r\n  handleSearchQuery = (event) => {\r\n    this.setState({ searchValue: event.target.value });\r\n\r\n  }\r\n\r\n  handleKeyPress = (event) => {\r\n    if (event.key === 'Enter') {\r\n      this.fetchCity();\r\n    }\r\n  }\r\n\r\n\r\n  switchUnit = (event) => {\r\n    this.state.unit === 'C' ? this.setState({ unit: 'F' }) : this.setState({ unit: 'C' });\r\n  }\r\n\r\n  checkGeolocation = () => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(this.displayLocationInfo);\r\n    } else {\r\n      console.log(\"no\")\r\n    }\r\n  }\r\n\r\n  displayLocationInfo = (position) => {\r\n    const lng = position.coords.longitude;\r\n    const lat = position.coords.latitude;\r\n    this.setState({ location: `${lat},${lng}`, searchValue: `${lat},${lng}` })\r\n  }\r\n\r\n  fetchCity = () => {\r\n    this.setState({ loading: false })\r\n    let searchValue = null;\r\n    let location = \"your location\";\r\n    if (this.state.searchValue != null) {\r\n      searchValue = this.state.searchValue;\r\n      location = searchValue;\r\n    }\r\n    else if (this.state.location != null) {\r\n      searchValue = this.state.location;\r\n    }\r\n    if (searchValue.length > 1) {\r\n      this.setState({ loading: true })\r\n      fetch(`https://weatherbackend.herokuapp.com/api/currently/${searchValue}/${this.state.unit}`, {\r\n        headers: {\r\n          \"content-type\": \"application/json\"\r\n        }\r\n      }).then(data => data.json()).then(result => {\r\n        if (location.split(',')[1] !== undefined) location = 'your location';\r\n        this.setState({\r\n          weatherInfo: [\r\n            result.Humidity,\r\n            result.Temperature,\r\n            result.summary,\r\n            result.sunrise,\r\n            result.sunset,\r\n            result.windSpeed,\r\n            location,\r\n            result.icon,\r\n            this.state.unit,\r\n          ]\r\n        })\r\n        this.setState({ loading: false, typeOFContent: \"currentweather\" })\r\n      });\r\n    }\r\n  }\r\n\r\n  fetchForecast = () => {\r\n    let searchValue = null;\r\n    let location = \"your location\";\r\n    if (this.state.searchValue != null) {\r\n      searchValue = this.state.searchValue;\r\n      location = searchValue;\r\n    }\r\n    else if (this.state.location != null) {\r\n      searchValue = this.state.location;\r\n    }\r\n    if (searchValue.length > 1) {\r\n      this.setState({ loading: true })\r\n      fetch(`https://weatherbackend.herokuapp.com/api/forecast/${searchValue}/${this.state.unit}`, {\r\n        headers: {\r\n          \"content-type\": \"application/json\"\r\n        }\r\n      }).then(data => data.json()).then(result => {\r\n        let tempArray = [];\r\n        let weekArray = this.getWeekFromNow();\r\n\r\n        result.forEach(e => {\r\n          let weather = {\r\n            day: weekArray[e.dayNr],\r\n            windSpeed: e.windSpeed,\r\n            summary: e.summary,\r\n            temperatureMin: e.temperatureMin,\r\n            temperatureMax: e.temperatureMax,\r\n            humidity: e.humidity,\r\n            sunrise: e.sunrise,\r\n            sunset: e.sunset,\r\n            icon: e.icon,\r\n            apparentTemperatureMin: e.apparentTemperatureMin,\r\n            apparentTemperatureMax: e.apparentTemperatureMax,\r\n          }\r\n          tempArray.push({ weather: weather });\r\n        });\r\n        this.setState({ forecast: tempArray, loading: false, typeOFContent: \"forecast\" })\r\n      })\r\n    }\r\n  }\r\n\r\n  fetchOneDetailedDay = () => {\r\n    this.setState({ loading: false })\r\n    let searchValue = null;\r\n    let location = \"your location\";\r\n    if (this.state.searchValue != null) {\r\n      searchValue = this.state.searchValue;\r\n      location = searchValue;\r\n    }\r\n    else if (this.state.location != null) {\r\n      searchValue = this.state.location;\r\n    }\r\n    if (searchValue.length > 1) {\r\n      this.setState({ loading: true })\r\n      fetch(`https://weatherbackend.herokuapp.com/api/24h/${searchValue}/${this.state.unit}`, {\r\n        headers: {\r\n          \"content-type\": \"application/json\"\r\n        }\r\n      }).then(data => data.json()).then(result => {\r\n        if (location.split(',')[1] !== undefined) location = 'your location';\r\n        this.setState({ hourlyDetails: result, loading: false, typeOFContent: \"detail\" })\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  getWeekFromNow = () => {\r\n    let date = new Date();\r\n    let counter = date.getDay();\r\n    let start = date.getDay();\r\n    let weekArray = [];\r\n    let weekday = [\r\n      \"Sunday\",\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\",\r\n    ];\r\n    for (let i = 0; i < 6; i++) {\r\n      weekArray.push(weekday[counter])\r\n      counter++;\r\n      if (counter == 7) {\r\n        for (let j = 0; j < 7; j++) {\r\n          weekArray.push(weekday[j]);\r\n        }\r\n      }\r\n    }\r\n    return weekArray;\r\n  }\r\n\r\n  getRandomIcon = () => {\r\n    let icons = [\r\n      'rainy',\r\n      'cloud',\r\n      'sun'\r\n    ]\r\n    let randomIcon = icons[Math.floor(Math.random() * icons.length)];\r\n    \r\n    let weatherDiv;\r\n    if (randomIcon === 'sun') {\r\n      weatherDiv = (\r\n        <div className=\"sunContainer\">\r\n          <div className=\"theSun\">\r\n            <div className=\"centerSun\"></div>\r\n            <div className=\"rays\">\r\n              <div className=\"ray1\">\r\n                <div className=\"sunbeam\"></div>\r\n              </div>\r\n              <div className=\"ray2\">\r\n                <div className=\"sunbeam\"></div>\r\n              </div>\r\n              <div className=\"ray3\">\r\n                <div className=\"sunbeam\"></div>\r\n              </div>\r\n              <div className=\"ray4\">\r\n                <div className=\"sunbeam\"></div>\r\n              </div>\r\n              <div className=\"ray5\">\r\n                <div className=\"sunbeam\"></div>\r\n              </div>\r\n              <div className=\"ray6\">\r\n                <div className=\"sunbeam\"></div>\r\n              </div>\r\n              <div className=\"ray7\">\r\n                <div className=\"sunbeam\"></div>\r\n              </div>\r\n              <div className=\"ray8\">\r\n                <div className=\"sunbeam\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    } else {\r\n      weatherDiv = (<div className=\"sunContainer\"> <div className={randomIcon} /></div>)\r\n    }\r\n\r\n    this.setState({\r\n      icon: weatherDiv\r\n    })\r\n\r\n  }\r\n\r\n  gobackToMainMenu = () => {\r\n    this.setState({ typeOFContent: \"start\", unit: 'C', weatherInfo: [], forecast: [] });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.checkGeolocation();\r\n    this.getRandomIcon();\r\n  }\r\n\r\n  render() {\r\n    let loader = null;\r\n    if (this.state.loading) {\r\n      loader = \"lds-facebook\";\r\n    }\r\n    if (!this.state.loading) {\r\n      loader = \"\";\r\n    }\r\n\r\n    if (this.state.typeOFContent === \"start\") {\r\n      return (\r\n        <div className=\"App\">\r\n          {this.state.icon}\r\n          <div className=\"BigContainer\">\r\n            <div className=\"Container\">\r\n              <input className=\"searchCityInput\" value={this.state.searchValue} onChange={this.handleSearchQuery} onKeyPress={this.handleKeyPress} placeholder=\"Weather, where?\"></input>\r\n              <button className=\"searchWeatherButton\" onClick={this.fetchCity}>now</button>\r\n              <button className=\"searchWeatherButton\" onClick={this.fetchForecast}>forecast</button>\r\n              <button className=\"searchWeatherButton\" onClick={this.fetchOneDetailedDay}>24h details</button>\r\n              <div className=\"ml-1\">\r\n                <p><b>°C / °F</b></p>\r\n                <label className=\"switch\">\r\n                  <input type=\"checkbox\" onChange={this.switchUnit} />\r\n                  <span className=\"slider round\"></span>\r\n                </label>\r\n              </div>\r\n              <div>\r\n                <div className={loader}><div></div><div></div><div></div></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    if (this.state.typeOFContent === \"currentweather\") {\r\n      return (\r\n        <Smartcard weatherInfo={this.state.weatherInfo} goback={this.gobackToMainMenu} />\r\n      )\r\n    }\r\n\r\n    if (this.state.typeOFContent === \"forecast\") {\r\n      return (\r\n        <Forecast forecast={this.state.forecast} goback={this.gobackToMainMenu} location={this.state.searchValue} unit={this.state.unit} />\r\n      )\r\n    }\r\n\r\n    if (this.state.typeOFContent === 'detail') {\r\n      return (\r\n        <DetailedDay hourlyDetails={this.state.hourlyDetails} goback={this.gobackToMainMenu} location={this.state.searchValue} unit={this.state.unit} />\r\n      )\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}